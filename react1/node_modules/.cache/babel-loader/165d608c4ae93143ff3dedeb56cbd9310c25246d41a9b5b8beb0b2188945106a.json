{"ast":null,"code":"var _jsxFileName = \"E:\\\\tss6-new\\\\react1\\\\src\\\\component\\\\A.js\";\nimport B from \"./B\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet A = () => {\n  // Component --\n  // A Component is a return type function which have JSX code. Every Component naming should PascleCase. Every componet is a html Tag.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"blue\"\n      },\n      children: \"This is A Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nostrum earum nulla rem animi nam cupiditate doloribus aliquid sequi dolorum nemo. Modi dolor, provident odio sequi iure animi error voluptas exercitationem?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(B, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = A;\nexport default A;\nvar _c;\n$RefreshReg$(_c, \"A\");","map":{"version":3,"names":["B","jsxDEV","_jsxDEV","Fragment","_Fragment","A","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tss6-new/react1/src/component/A.js"],"sourcesContent":["import B from \"./B\";\r\nlet A = ()=>{\r\n    // Component --\r\n    // A Component is a return type function which have JSX code. Every Component naming should PascleCase. Every componet is a html Tag.\r\n    return(\r\n        <>\r\n        {/* <h1 style=\"background-color : red; font-size : 20px\"> */}\r\n\r\n        <h1 style={{ color : \"blue\"  }}>This is A Component</h1>\r\n        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nostrum earum nulla rem animi nam cupiditate doloribus aliquid sequi dolorum nemo. Modi dolor, provident odio sequi iure animi error voluptas exercitationem?</p>\r\n        <B/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default A;"],"mappings":";AAAA,OAAOA,CAAC,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACpB,IAAIC,CAAC,GAAGA,CAAA,KAAI;EACR;EACA;EACA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBAGAJ,OAAA;MAAIK,KAAK,EAAE;QAAEC,KAAK,EAAG;MAAQ,CAAE;MAAAF,QAAA,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDV,OAAA;MAAAI,QAAA,EAAG;IAAuN;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9NV,OAAA,CAACF,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACF,CAAC;AAEX,CAAC;AAAAC,EAAA,GAZGR,CAAC;AAcL,eAAeA,CAAC;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}